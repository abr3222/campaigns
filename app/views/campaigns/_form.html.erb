<%= form_with(model: campaign, local: true) do |form| %>
  <% if campaign.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(campaign.errors.count, "error") %> prohibited this campaign from being saved:</h2>

      <ul>
      <% campaign.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :title %>
    <%= form.text_field :title %>
  </div>

  <div class="field">
    <%= form.label :purpose %>
    <%= form.text_area :purpose %>
  </div>

    <div class="field">
      <%= form.select :estimated_duration, options_for_select(Campaign.estimated_durations.map {|key, value| [key.capitalize, value]}, @user) %>
    </div>

     <div class="field">
       <p><small id='tag_links'>Tags: <%= raw @campaign.tags.order(:name).map { |tag| link_to tag.name, campaign_path(q: { tags_id_eq: tag.id }) }.join(', ') %></small></p>
       <%= form.text_field :tag_list, collection: Tag.order(:name), 'data-role': 'tagsinput', input_html: { multiple: true, class: 'chosen-select' } %>
     </div>

    <%#= form.label :estimated_duration %>
    <%#= form.number_field :estimated_duration %>


  <div class="field">
    <%= form.label :user_id %>
    <%#= form.text_field :user_id %>
    <%= collection_select(
            :campaign, :user_id, User.all, :id, :name, { prompt: true }
        ) %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>


<script>
    var citynames = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        prefetch: {
            url: 'assets/citynames.json',
            filter: function(list) {
                return $.map(list, function(cityname) {
                    return { name: cityname }; });
            }
        }
    });
    citynames.initialize();

    $('input').tagsinput({
        typeaheadjs: {
            name: 'citynames',
            displayKey: 'name',
            valueKey: 'name',
            source: citynames.ttAdapter()
        }
    });
</script>